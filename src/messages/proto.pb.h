// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_proto_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_proto_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_proto_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_proto_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[7]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_proto_2eproto;
class Message;
class MessageDefaultTypeInternal;
extern MessageDefaultTypeInternal _Message_default_instance_;
class Message_Altitude;
class Message_AltitudeDefaultTypeInternal;
extern Message_AltitudeDefaultTypeInternal _Message_Altitude_default_instance_;
class Message_Altitude_Inner;
class Message_Altitude_InnerDefaultTypeInternal;
extern Message_Altitude_InnerDefaultTypeInternal _Message_Altitude_Inner_default_instance_;
class Message_Position;
class Message_PositionDefaultTypeInternal;
extern Message_PositionDefaultTypeInternal _Message_Position_default_instance_;
class Message_Position_Cartesian;
class Message_Position_CartesianDefaultTypeInternal;
extern Message_Position_CartesianDefaultTypeInternal _Message_Position_Cartesian_default_instance_;
class Message_Velocity;
class Message_VelocityDefaultTypeInternal;
extern Message_VelocityDefaultTypeInternal _Message_Velocity_default_instance_;
class Message_Velocity_Inner;
class Message_Velocity_InnerDefaultTypeInternal;
extern Message_Velocity_InnerDefaultTypeInternal _Message_Velocity_Inner_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::Message* Arena::CreateMaybeMessage<::Message>(Arena*);
template<> ::Message_Altitude* Arena::CreateMaybeMessage<::Message_Altitude>(Arena*);
template<> ::Message_Altitude_Inner* Arena::CreateMaybeMessage<::Message_Altitude_Inner>(Arena*);
template<> ::Message_Position* Arena::CreateMaybeMessage<::Message_Position>(Arena*);
template<> ::Message_Position_Cartesian* Arena::CreateMaybeMessage<::Message_Position_Cartesian>(Arena*);
template<> ::Message_Velocity* Arena::CreateMaybeMessage<::Message_Velocity>(Arena*);
template<> ::Message_Velocity_Inner* Arena::CreateMaybeMessage<::Message_Velocity_Inner>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class Message_Position_Cartesian :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Message.Position.Cartesian) */ {
 public:
  Message_Position_Cartesian();
  virtual ~Message_Position_Cartesian();

  Message_Position_Cartesian(const Message_Position_Cartesian& from);
  Message_Position_Cartesian(Message_Position_Cartesian&& from) noexcept
    : Message_Position_Cartesian() {
    *this = ::std::move(from);
  }

  inline Message_Position_Cartesian& operator=(const Message_Position_Cartesian& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message_Position_Cartesian& operator=(Message_Position_Cartesian&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Message_Position_Cartesian& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Message_Position_Cartesian* internal_default_instance() {
    return reinterpret_cast<const Message_Position_Cartesian*>(
               &_Message_Position_Cartesian_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Message_Position_Cartesian& a, Message_Position_Cartesian& b) {
    a.Swap(&b);
  }
  inline void Swap(Message_Position_Cartesian* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Message_Position_Cartesian* New() const final {
    return CreateMaybeMessage<Message_Position_Cartesian>(nullptr);
  }

  Message_Position_Cartesian* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Message_Position_Cartesian>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Message_Position_Cartesian& from);
  void MergeFrom(const Message_Position_Cartesian& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Message_Position_Cartesian* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Message.Position.Cartesian";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_2eproto);
    return ::descriptor_table_proto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIvalFieldNumber = 1,
    kBoolyFieldNumber = 2,
  };
  // required int64 ival = 1;
  bool has_ival() const;
  private:
  bool _internal_has_ival() const;
  public:
  void clear_ival();
  ::PROTOBUF_NAMESPACE_ID::int64 ival() const;
  void set_ival(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_ival() const;
  void _internal_set_ival(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required bool booly = 2;
  bool has_booly() const;
  private:
  bool _internal_has_booly() const;
  public:
  void clear_booly();
  bool booly() const;
  void set_booly(bool value);
  private:
  bool _internal_booly() const;
  void _internal_set_booly(bool value);
  public:

  // @@protoc_insertion_point(class_scope:Message.Position.Cartesian)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 ival_;
  bool booly_;
  friend struct ::TableStruct_proto_2eproto;
};
// -------------------------------------------------------------------

class Message_Position :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Message.Position) */ {
 public:
  Message_Position();
  virtual ~Message_Position();

  Message_Position(const Message_Position& from);
  Message_Position(Message_Position&& from) noexcept
    : Message_Position() {
    *this = ::std::move(from);
  }

  inline Message_Position& operator=(const Message_Position& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message_Position& operator=(Message_Position&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Message_Position& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Message_Position* internal_default_instance() {
    return reinterpret_cast<const Message_Position*>(
               &_Message_Position_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Message_Position& a, Message_Position& b) {
    a.Swap(&b);
  }
  inline void Swap(Message_Position* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Message_Position* New() const final {
    return CreateMaybeMessage<Message_Position>(nullptr);
  }

  Message_Position* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Message_Position>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Message_Position& from);
  void MergeFrom(const Message_Position& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Message_Position* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Message.Position";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_2eproto);
    return ::descriptor_table_proto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef Message_Position_Cartesian Cartesian;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Message.Position)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_2eproto;
};
// -------------------------------------------------------------------

class Message_Velocity_Inner :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Message.Velocity.Inner) */ {
 public:
  Message_Velocity_Inner();
  virtual ~Message_Velocity_Inner();

  Message_Velocity_Inner(const Message_Velocity_Inner& from);
  Message_Velocity_Inner(Message_Velocity_Inner&& from) noexcept
    : Message_Velocity_Inner() {
    *this = ::std::move(from);
  }

  inline Message_Velocity_Inner& operator=(const Message_Velocity_Inner& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message_Velocity_Inner& operator=(Message_Velocity_Inner&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Message_Velocity_Inner& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Message_Velocity_Inner* internal_default_instance() {
    return reinterpret_cast<const Message_Velocity_Inner*>(
               &_Message_Velocity_Inner_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Message_Velocity_Inner& a, Message_Velocity_Inner& b) {
    a.Swap(&b);
  }
  inline void Swap(Message_Velocity_Inner* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Message_Velocity_Inner* New() const final {
    return CreateMaybeMessage<Message_Velocity_Inner>(nullptr);
  }

  Message_Velocity_Inner* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Message_Velocity_Inner>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Message_Velocity_Inner& from);
  void MergeFrom(const Message_Velocity_Inner& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Message_Velocity_Inner* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Message.Velocity.Inner";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_2eproto);
    return ::descriptor_table_proto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIvalFieldNumber = 1,
    kBoolyFieldNumber = 2,
  };
  // required int32 ival = 1;
  bool has_ival() const;
  private:
  bool _internal_has_ival() const;
  public:
  void clear_ival();
  ::PROTOBUF_NAMESPACE_ID::int32 ival() const;
  void set_ival(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ival() const;
  void _internal_set_ival(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional bool booly = 2;
  bool has_booly() const;
  private:
  bool _internal_has_booly() const;
  public:
  void clear_booly();
  bool booly() const;
  void set_booly(bool value);
  private:
  bool _internal_booly() const;
  void _internal_set_booly(bool value);
  public:

  // @@protoc_insertion_point(class_scope:Message.Velocity.Inner)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 ival_;
  bool booly_;
  friend struct ::TableStruct_proto_2eproto;
};
// -------------------------------------------------------------------

class Message_Velocity :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Message.Velocity) */ {
 public:
  Message_Velocity();
  virtual ~Message_Velocity();

  Message_Velocity(const Message_Velocity& from);
  Message_Velocity(Message_Velocity&& from) noexcept
    : Message_Velocity() {
    *this = ::std::move(from);
  }

  inline Message_Velocity& operator=(const Message_Velocity& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message_Velocity& operator=(Message_Velocity&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Message_Velocity& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Message_Velocity* internal_default_instance() {
    return reinterpret_cast<const Message_Velocity*>(
               &_Message_Velocity_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(Message_Velocity& a, Message_Velocity& b) {
    a.Swap(&b);
  }
  inline void Swap(Message_Velocity* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Message_Velocity* New() const final {
    return CreateMaybeMessage<Message_Velocity>(nullptr);
  }

  Message_Velocity* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Message_Velocity>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Message_Velocity& from);
  void MergeFrom(const Message_Velocity& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Message_Velocity* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Message.Velocity";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_2eproto);
    return ::descriptor_table_proto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef Message_Velocity_Inner Inner;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Message.Velocity)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_2eproto;
};
// -------------------------------------------------------------------

class Message_Altitude_Inner :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Message.Altitude.Inner) */ {
 public:
  Message_Altitude_Inner();
  virtual ~Message_Altitude_Inner();

  Message_Altitude_Inner(const Message_Altitude_Inner& from);
  Message_Altitude_Inner(Message_Altitude_Inner&& from) noexcept
    : Message_Altitude_Inner() {
    *this = ::std::move(from);
  }

  inline Message_Altitude_Inner& operator=(const Message_Altitude_Inner& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message_Altitude_Inner& operator=(Message_Altitude_Inner&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Message_Altitude_Inner& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Message_Altitude_Inner* internal_default_instance() {
    return reinterpret_cast<const Message_Altitude_Inner*>(
               &_Message_Altitude_Inner_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(Message_Altitude_Inner& a, Message_Altitude_Inner& b) {
    a.Swap(&b);
  }
  inline void Swap(Message_Altitude_Inner* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Message_Altitude_Inner* New() const final {
    return CreateMaybeMessage<Message_Altitude_Inner>(nullptr);
  }

  Message_Altitude_Inner* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Message_Altitude_Inner>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Message_Altitude_Inner& from);
  void MergeFrom(const Message_Altitude_Inner& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Message_Altitude_Inner* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Message.Altitude.Inner";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_2eproto);
    return ::descriptor_table_proto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIvalFieldNumber = 1,
    kBoolyFieldNumber = 2,
  };
  // required int32 ival = 1;
  bool has_ival() const;
  private:
  bool _internal_has_ival() const;
  public:
  void clear_ival();
  ::PROTOBUF_NAMESPACE_ID::int32 ival() const;
  void set_ival(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ival() const;
  void _internal_set_ival(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional bool booly = 2;
  bool has_booly() const;
  private:
  bool _internal_has_booly() const;
  public:
  void clear_booly();
  bool booly() const;
  void set_booly(bool value);
  private:
  bool _internal_booly() const;
  void _internal_set_booly(bool value);
  public:

  // @@protoc_insertion_point(class_scope:Message.Altitude.Inner)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 ival_;
  bool booly_;
  friend struct ::TableStruct_proto_2eproto;
};
// -------------------------------------------------------------------

class Message_Altitude :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Message.Altitude) */ {
 public:
  Message_Altitude();
  virtual ~Message_Altitude();

  Message_Altitude(const Message_Altitude& from);
  Message_Altitude(Message_Altitude&& from) noexcept
    : Message_Altitude() {
    *this = ::std::move(from);
  }

  inline Message_Altitude& operator=(const Message_Altitude& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message_Altitude& operator=(Message_Altitude&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Message_Altitude& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Message_Altitude* internal_default_instance() {
    return reinterpret_cast<const Message_Altitude*>(
               &_Message_Altitude_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(Message_Altitude& a, Message_Altitude& b) {
    a.Swap(&b);
  }
  inline void Swap(Message_Altitude* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Message_Altitude* New() const final {
    return CreateMaybeMessage<Message_Altitude>(nullptr);
  }

  Message_Altitude* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Message_Altitude>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Message_Altitude& from);
  void MergeFrom(const Message_Altitude& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Message_Altitude* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Message.Altitude";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_2eproto);
    return ::descriptor_table_proto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef Message_Altitude_Inner Inner;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Message.Altitude)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_2eproto;
};
// -------------------------------------------------------------------

class Message :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Message) */ {
 public:
  Message();
  virtual ~Message();

  Message(const Message& from);
  Message(Message&& from) noexcept
    : Message() {
    *this = ::std::move(from);
  }

  inline Message& operator=(const Message& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message& operator=(Message&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Message& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Message* internal_default_instance() {
    return reinterpret_cast<const Message*>(
               &_Message_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(Message& a, Message& b) {
    a.Swap(&b);
  }
  inline void Swap(Message* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Message* New() const final {
    return CreateMaybeMessage<Message>(nullptr);
  }

  Message* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Message>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Message& from);
  void MergeFrom(const Message& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Message* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Message";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_2eproto);
    return ::descriptor_table_proto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef Message_Position Position;
  typedef Message_Velocity Velocity;
  typedef Message_Altitude Altitude;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Message)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Message_Position_Cartesian

// required int64 ival = 1;
inline bool Message_Position_Cartesian::_internal_has_ival() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool Message_Position_Cartesian::has_ival() const {
  return _internal_has_ival();
}
inline void Message_Position_Cartesian::clear_ival() {
  ival_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Message_Position_Cartesian::_internal_ival() const {
  return ival_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Message_Position_Cartesian::ival() const {
  // @@protoc_insertion_point(field_get:Message.Position.Cartesian.ival)
  return _internal_ival();
}
inline void Message_Position_Cartesian::_internal_set_ival(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  ival_ = value;
}
inline void Message_Position_Cartesian::set_ival(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_ival(value);
  // @@protoc_insertion_point(field_set:Message.Position.Cartesian.ival)
}

// required bool booly = 2;
inline bool Message_Position_Cartesian::_internal_has_booly() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool Message_Position_Cartesian::has_booly() const {
  return _internal_has_booly();
}
inline void Message_Position_Cartesian::clear_booly() {
  booly_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool Message_Position_Cartesian::_internal_booly() const {
  return booly_;
}
inline bool Message_Position_Cartesian::booly() const {
  // @@protoc_insertion_point(field_get:Message.Position.Cartesian.booly)
  return _internal_booly();
}
inline void Message_Position_Cartesian::_internal_set_booly(bool value) {
  _has_bits_[0] |= 0x00000002u;
  booly_ = value;
}
inline void Message_Position_Cartesian::set_booly(bool value) {
  _internal_set_booly(value);
  // @@protoc_insertion_point(field_set:Message.Position.Cartesian.booly)
}

// -------------------------------------------------------------------

// Message_Position

// -------------------------------------------------------------------

// Message_Velocity_Inner

// required int32 ival = 1;
inline bool Message_Velocity_Inner::_internal_has_ival() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool Message_Velocity_Inner::has_ival() const {
  return _internal_has_ival();
}
inline void Message_Velocity_Inner::clear_ival() {
  ival_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Message_Velocity_Inner::_internal_ival() const {
  return ival_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Message_Velocity_Inner::ival() const {
  // @@protoc_insertion_point(field_get:Message.Velocity.Inner.ival)
  return _internal_ival();
}
inline void Message_Velocity_Inner::_internal_set_ival(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  ival_ = value;
}
inline void Message_Velocity_Inner::set_ival(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ival(value);
  // @@protoc_insertion_point(field_set:Message.Velocity.Inner.ival)
}

// optional bool booly = 2;
inline bool Message_Velocity_Inner::_internal_has_booly() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool Message_Velocity_Inner::has_booly() const {
  return _internal_has_booly();
}
inline void Message_Velocity_Inner::clear_booly() {
  booly_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool Message_Velocity_Inner::_internal_booly() const {
  return booly_;
}
inline bool Message_Velocity_Inner::booly() const {
  // @@protoc_insertion_point(field_get:Message.Velocity.Inner.booly)
  return _internal_booly();
}
inline void Message_Velocity_Inner::_internal_set_booly(bool value) {
  _has_bits_[0] |= 0x00000002u;
  booly_ = value;
}
inline void Message_Velocity_Inner::set_booly(bool value) {
  _internal_set_booly(value);
  // @@protoc_insertion_point(field_set:Message.Velocity.Inner.booly)
}

// -------------------------------------------------------------------

// Message_Velocity

// -------------------------------------------------------------------

// Message_Altitude_Inner

// required int32 ival = 1;
inline bool Message_Altitude_Inner::_internal_has_ival() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool Message_Altitude_Inner::has_ival() const {
  return _internal_has_ival();
}
inline void Message_Altitude_Inner::clear_ival() {
  ival_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Message_Altitude_Inner::_internal_ival() const {
  return ival_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Message_Altitude_Inner::ival() const {
  // @@protoc_insertion_point(field_get:Message.Altitude.Inner.ival)
  return _internal_ival();
}
inline void Message_Altitude_Inner::_internal_set_ival(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  ival_ = value;
}
inline void Message_Altitude_Inner::set_ival(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ival(value);
  // @@protoc_insertion_point(field_set:Message.Altitude.Inner.ival)
}

// optional bool booly = 2;
inline bool Message_Altitude_Inner::_internal_has_booly() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool Message_Altitude_Inner::has_booly() const {
  return _internal_has_booly();
}
inline void Message_Altitude_Inner::clear_booly() {
  booly_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool Message_Altitude_Inner::_internal_booly() const {
  return booly_;
}
inline bool Message_Altitude_Inner::booly() const {
  // @@protoc_insertion_point(field_get:Message.Altitude.Inner.booly)
  return _internal_booly();
}
inline void Message_Altitude_Inner::_internal_set_booly(bool value) {
  _has_bits_[0] |= 0x00000002u;
  booly_ = value;
}
inline void Message_Altitude_Inner::set_booly(bool value) {
  _internal_set_booly(value);
  // @@protoc_insertion_point(field_set:Message.Altitude.Inner.booly)
}

// -------------------------------------------------------------------

// Message_Altitude

// -------------------------------------------------------------------

// Message

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_proto_2eproto
