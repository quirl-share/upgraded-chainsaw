// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto.proto

#include "proto.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
class Message_Position_CartesianDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Message_Position_Cartesian> _instance;
} _Message_Position_Cartesian_default_instance_;
class Message_PositionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Message_Position> _instance;
} _Message_Position_default_instance_;
class Message_Velocity_InnerDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Message_Velocity_Inner> _instance;
} _Message_Velocity_Inner_default_instance_;
class Message_VelocityDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Message_Velocity> _instance;
} _Message_Velocity_default_instance_;
class Message_Altitude_InnerDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Message_Altitude_Inner> _instance;
} _Message_Altitude_Inner_default_instance_;
class Message_AltitudeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Message_Altitude> _instance;
} _Message_Altitude_default_instance_;
class MessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Message> _instance;
} _Message_default_instance_;
static void InitDefaultsscc_info_Message_proto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Message_default_instance_;
    new (ptr) ::Message();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Message::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_proto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Message_proto_2eproto}, {}};

static void InitDefaultsscc_info_Message_Altitude_proto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Message_Altitude_default_instance_;
    new (ptr) ::Message_Altitude();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Message_Altitude::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_Altitude_proto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Message_Altitude_proto_2eproto}, {}};

static void InitDefaultsscc_info_Message_Altitude_Inner_proto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Message_Altitude_Inner_default_instance_;
    new (ptr) ::Message_Altitude_Inner();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Message_Altitude_Inner::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_Altitude_Inner_proto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Message_Altitude_Inner_proto_2eproto}, {}};

static void InitDefaultsscc_info_Message_Position_proto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Message_Position_default_instance_;
    new (ptr) ::Message_Position();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Message_Position::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_Position_proto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Message_Position_proto_2eproto}, {}};

static void InitDefaultsscc_info_Message_Position_Cartesian_proto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Message_Position_Cartesian_default_instance_;
    new (ptr) ::Message_Position_Cartesian();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Message_Position_Cartesian::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_Position_Cartesian_proto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Message_Position_Cartesian_proto_2eproto}, {}};

static void InitDefaultsscc_info_Message_Velocity_proto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Message_Velocity_default_instance_;
    new (ptr) ::Message_Velocity();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Message_Velocity::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_Velocity_proto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Message_Velocity_proto_2eproto}, {}};

static void InitDefaultsscc_info_Message_Velocity_Inner_proto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Message_Velocity_Inner_default_instance_;
    new (ptr) ::Message_Velocity_Inner();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Message_Velocity_Inner::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_Velocity_Inner_proto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Message_Velocity_Inner_proto_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_proto_2eproto[7];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_proto_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_proto_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_proto_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::Message_Position_Cartesian, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::Message_Position_Cartesian, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Message_Position_Cartesian, ival_),
  PROTOBUF_FIELD_OFFSET(::Message_Position_Cartesian, booly_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::Message_Position, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::Message_Position, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Message_Velocity_Inner, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::Message_Velocity_Inner, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Message_Velocity_Inner, ival_),
  PROTOBUF_FIELD_OFFSET(::Message_Velocity_Inner, booly_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::Message_Velocity, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::Message_Velocity, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Message_Altitude_Inner, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::Message_Altitude_Inner, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Message_Altitude_Inner, ival_),
  PROTOBUF_FIELD_OFFSET(::Message_Altitude_Inner, booly_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::Message_Altitude, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::Message_Altitude, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Message, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::Message, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::Message_Position_Cartesian)},
  { 9, 14, sizeof(::Message_Position)},
  { 14, 21, sizeof(::Message_Velocity_Inner)},
  { 23, 28, sizeof(::Message_Velocity)},
  { 28, 35, sizeof(::Message_Altitude_Inner)},
  { 37, 42, sizeof(::Message_Altitude)},
  { 42, 47, sizeof(::Message)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_Message_Position_Cartesian_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_Message_Position_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_Message_Velocity_Inner_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_Message_Velocity_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_Message_Altitude_Inner_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_Message_Altitude_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_Message_default_instance_),
};

const char descriptor_table_protodef_proto_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\013proto.proto\"\243\001\n\007Message\0324\n\010Position\032(\n"
  "\tCartesian\022\014\n\004ival\030\001 \002(\003\022\r\n\005booly\030\002 \002(\010\032"
  "0\n\010Velocity\032$\n\005Inner\022\014\n\004ival\030\001 \002(\005\022\r\n\005bo"
  "oly\030\002 \001(\010\0320\n\010Altitude\032$\n\005Inner\022\014\n\004ival\030\001"
  " \002(\005\022\r\n\005booly\030\002 \001(\010"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_proto_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_proto_2eproto_sccs[7] = {
  &scc_info_Message_proto_2eproto.base,
  &scc_info_Message_Altitude_proto_2eproto.base,
  &scc_info_Message_Altitude_Inner_proto_2eproto.base,
  &scc_info_Message_Position_proto_2eproto.base,
  &scc_info_Message_Position_Cartesian_proto_2eproto.base,
  &scc_info_Message_Velocity_proto_2eproto.base,
  &scc_info_Message_Velocity_Inner_proto_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_proto_2eproto_once;
static bool descriptor_table_proto_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_proto_2eproto = {
  &descriptor_table_proto_2eproto_initialized, descriptor_table_protodef_proto_2eproto, "proto.proto", 179,
  &descriptor_table_proto_2eproto_once, descriptor_table_proto_2eproto_sccs, descriptor_table_proto_2eproto_deps, 7, 0,
  schemas, file_default_instances, TableStruct_proto_2eproto::offsets,
  file_level_metadata_proto_2eproto, 7, file_level_enum_descriptors_proto_2eproto, file_level_service_descriptors_proto_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_proto_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_proto_2eproto), true);

// ===================================================================

void Message_Position_Cartesian::InitAsDefaultInstance() {
}
class Message_Position_Cartesian::_Internal {
 public:
  using HasBits = decltype(std::declval<Message_Position_Cartesian>()._has_bits_);
  static void set_has_ival(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_booly(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

Message_Position_Cartesian::Message_Position_Cartesian()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Message.Position.Cartesian)
}
Message_Position_Cartesian::Message_Position_Cartesian(const Message_Position_Cartesian& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ival_, &from.ival_,
    static_cast<size_t>(reinterpret_cast<char*>(&booly_) -
    reinterpret_cast<char*>(&ival_)) + sizeof(booly_));
  // @@protoc_insertion_point(copy_constructor:Message.Position.Cartesian)
}

void Message_Position_Cartesian::SharedCtor() {
  ::memset(&ival_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&booly_) -
      reinterpret_cast<char*>(&ival_)) + sizeof(booly_));
}

Message_Position_Cartesian::~Message_Position_Cartesian() {
  // @@protoc_insertion_point(destructor:Message.Position.Cartesian)
  SharedDtor();
}

void Message_Position_Cartesian::SharedDtor() {
}

void Message_Position_Cartesian::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message_Position_Cartesian& Message_Position_Cartesian::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Message_Position_Cartesian_proto_2eproto.base);
  return *internal_default_instance();
}


void Message_Position_Cartesian::Clear() {
// @@protoc_insertion_point(message_clear_start:Message.Position.Cartesian)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&ival_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&booly_) -
        reinterpret_cast<char*>(&ival_)) + sizeof(booly_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* Message_Position_Cartesian::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required int64 ival = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_ival(&has_bits);
          ival_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required bool booly = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_booly(&has_bits);
          booly_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message_Position_Cartesian::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Message.Position.Cartesian)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 ival = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_ival(), target);
  }

  // required bool booly = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_booly(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Message.Position.Cartesian)
  return target;
}

size_t Message_Position_Cartesian::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Message.Position.Cartesian)
  size_t total_size = 0;

  if (_internal_has_ival()) {
    // required int64 ival = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ival());
  }

  if (_internal_has_booly()) {
    // required bool booly = 2;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t Message_Position_Cartesian::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Message.Position.Cartesian)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 ival = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ival());

    // required bool booly = 2;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_Position_Cartesian::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Message.Position.Cartesian)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_Position_Cartesian* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message_Position_Cartesian>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Message.Position.Cartesian)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Message.Position.Cartesian)
    MergeFrom(*source);
  }
}

void Message_Position_Cartesian::MergeFrom(const Message_Position_Cartesian& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Message.Position.Cartesian)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ival_ = from.ival_;
    }
    if (cached_has_bits & 0x00000002u) {
      booly_ = from.booly_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Message_Position_Cartesian::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Message.Position.Cartesian)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_Position_Cartesian::CopyFrom(const Message_Position_Cartesian& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Message.Position.Cartesian)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_Position_Cartesian::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void Message_Position_Cartesian::InternalSwap(Message_Position_Cartesian* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(ival_, other->ival_);
  swap(booly_, other->booly_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_Position_Cartesian::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Message_Position::InitAsDefaultInstance() {
}
class Message_Position::_Internal {
 public:
  using HasBits = decltype(std::declval<Message_Position>()._has_bits_);
};

Message_Position::Message_Position()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Message.Position)
}
Message_Position::Message_Position(const Message_Position& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Message.Position)
}

void Message_Position::SharedCtor() {
}

Message_Position::~Message_Position() {
  // @@protoc_insertion_point(destructor:Message.Position)
  SharedDtor();
}

void Message_Position::SharedDtor() {
}

void Message_Position::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message_Position& Message_Position::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Message_Position_proto_2eproto.base);
  return *internal_default_instance();
}


void Message_Position::Clear() {
// @@protoc_insertion_point(message_clear_start:Message.Position)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* Message_Position::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message_Position::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Message.Position)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Message.Position)
  return target;
}

size_t Message_Position::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Message.Position)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_Position::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Message.Position)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_Position* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message_Position>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Message.Position)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Message.Position)
    MergeFrom(*source);
  }
}

void Message_Position::MergeFrom(const Message_Position& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Message.Position)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Message_Position::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Message.Position)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_Position::CopyFrom(const Message_Position& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Message.Position)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_Position::IsInitialized() const {
  return true;
}

void Message_Position::InternalSwap(Message_Position* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_Position::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Message_Velocity_Inner::InitAsDefaultInstance() {
}
class Message_Velocity_Inner::_Internal {
 public:
  using HasBits = decltype(std::declval<Message_Velocity_Inner>()._has_bits_);
  static void set_has_ival(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_booly(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

Message_Velocity_Inner::Message_Velocity_Inner()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Message.Velocity.Inner)
}
Message_Velocity_Inner::Message_Velocity_Inner(const Message_Velocity_Inner& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ival_, &from.ival_,
    static_cast<size_t>(reinterpret_cast<char*>(&booly_) -
    reinterpret_cast<char*>(&ival_)) + sizeof(booly_));
  // @@protoc_insertion_point(copy_constructor:Message.Velocity.Inner)
}

void Message_Velocity_Inner::SharedCtor() {
  ::memset(&ival_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&booly_) -
      reinterpret_cast<char*>(&ival_)) + sizeof(booly_));
}

Message_Velocity_Inner::~Message_Velocity_Inner() {
  // @@protoc_insertion_point(destructor:Message.Velocity.Inner)
  SharedDtor();
}

void Message_Velocity_Inner::SharedDtor() {
}

void Message_Velocity_Inner::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message_Velocity_Inner& Message_Velocity_Inner::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Message_Velocity_Inner_proto_2eproto.base);
  return *internal_default_instance();
}


void Message_Velocity_Inner::Clear() {
// @@protoc_insertion_point(message_clear_start:Message.Velocity.Inner)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&ival_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&booly_) -
        reinterpret_cast<char*>(&ival_)) + sizeof(booly_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* Message_Velocity_Inner::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required int32 ival = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_ival(&has_bits);
          ival_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool booly = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_booly(&has_bits);
          booly_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message_Velocity_Inner::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Message.Velocity.Inner)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 ival = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_ival(), target);
  }

  // optional bool booly = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_booly(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Message.Velocity.Inner)
  return target;
}

size_t Message_Velocity_Inner::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Message.Velocity.Inner)
  size_t total_size = 0;

  // required int32 ival = 1;
  if (_internal_has_ival()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_ival());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bool booly = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_Velocity_Inner::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Message.Velocity.Inner)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_Velocity_Inner* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message_Velocity_Inner>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Message.Velocity.Inner)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Message.Velocity.Inner)
    MergeFrom(*source);
  }
}

void Message_Velocity_Inner::MergeFrom(const Message_Velocity_Inner& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Message.Velocity.Inner)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ival_ = from.ival_;
    }
    if (cached_has_bits & 0x00000002u) {
      booly_ = from.booly_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Message_Velocity_Inner::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Message.Velocity.Inner)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_Velocity_Inner::CopyFrom(const Message_Velocity_Inner& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Message.Velocity.Inner)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_Velocity_Inner::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Message_Velocity_Inner::InternalSwap(Message_Velocity_Inner* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(ival_, other->ival_);
  swap(booly_, other->booly_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_Velocity_Inner::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Message_Velocity::InitAsDefaultInstance() {
}
class Message_Velocity::_Internal {
 public:
  using HasBits = decltype(std::declval<Message_Velocity>()._has_bits_);
};

Message_Velocity::Message_Velocity()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Message.Velocity)
}
Message_Velocity::Message_Velocity(const Message_Velocity& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Message.Velocity)
}

void Message_Velocity::SharedCtor() {
}

Message_Velocity::~Message_Velocity() {
  // @@protoc_insertion_point(destructor:Message.Velocity)
  SharedDtor();
}

void Message_Velocity::SharedDtor() {
}

void Message_Velocity::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message_Velocity& Message_Velocity::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Message_Velocity_proto_2eproto.base);
  return *internal_default_instance();
}


void Message_Velocity::Clear() {
// @@protoc_insertion_point(message_clear_start:Message.Velocity)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* Message_Velocity::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message_Velocity::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Message.Velocity)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Message.Velocity)
  return target;
}

size_t Message_Velocity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Message.Velocity)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_Velocity::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Message.Velocity)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_Velocity* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message_Velocity>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Message.Velocity)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Message.Velocity)
    MergeFrom(*source);
  }
}

void Message_Velocity::MergeFrom(const Message_Velocity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Message.Velocity)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Message_Velocity::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Message.Velocity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_Velocity::CopyFrom(const Message_Velocity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Message.Velocity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_Velocity::IsInitialized() const {
  return true;
}

void Message_Velocity::InternalSwap(Message_Velocity* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_Velocity::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Message_Altitude_Inner::InitAsDefaultInstance() {
}
class Message_Altitude_Inner::_Internal {
 public:
  using HasBits = decltype(std::declval<Message_Altitude_Inner>()._has_bits_);
  static void set_has_ival(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_booly(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

Message_Altitude_Inner::Message_Altitude_Inner()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Message.Altitude.Inner)
}
Message_Altitude_Inner::Message_Altitude_Inner(const Message_Altitude_Inner& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ival_, &from.ival_,
    static_cast<size_t>(reinterpret_cast<char*>(&booly_) -
    reinterpret_cast<char*>(&ival_)) + sizeof(booly_));
  // @@protoc_insertion_point(copy_constructor:Message.Altitude.Inner)
}

void Message_Altitude_Inner::SharedCtor() {
  ::memset(&ival_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&booly_) -
      reinterpret_cast<char*>(&ival_)) + sizeof(booly_));
}

Message_Altitude_Inner::~Message_Altitude_Inner() {
  // @@protoc_insertion_point(destructor:Message.Altitude.Inner)
  SharedDtor();
}

void Message_Altitude_Inner::SharedDtor() {
}

void Message_Altitude_Inner::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message_Altitude_Inner& Message_Altitude_Inner::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Message_Altitude_Inner_proto_2eproto.base);
  return *internal_default_instance();
}


void Message_Altitude_Inner::Clear() {
// @@protoc_insertion_point(message_clear_start:Message.Altitude.Inner)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&ival_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&booly_) -
        reinterpret_cast<char*>(&ival_)) + sizeof(booly_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* Message_Altitude_Inner::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required int32 ival = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_ival(&has_bits);
          ival_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool booly = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_booly(&has_bits);
          booly_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message_Altitude_Inner::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Message.Altitude.Inner)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 ival = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_ival(), target);
  }

  // optional bool booly = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_booly(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Message.Altitude.Inner)
  return target;
}

size_t Message_Altitude_Inner::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Message.Altitude.Inner)
  size_t total_size = 0;

  // required int32 ival = 1;
  if (_internal_has_ival()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_ival());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bool booly = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_Altitude_Inner::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Message.Altitude.Inner)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_Altitude_Inner* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message_Altitude_Inner>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Message.Altitude.Inner)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Message.Altitude.Inner)
    MergeFrom(*source);
  }
}

void Message_Altitude_Inner::MergeFrom(const Message_Altitude_Inner& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Message.Altitude.Inner)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ival_ = from.ival_;
    }
    if (cached_has_bits & 0x00000002u) {
      booly_ = from.booly_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Message_Altitude_Inner::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Message.Altitude.Inner)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_Altitude_Inner::CopyFrom(const Message_Altitude_Inner& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Message.Altitude.Inner)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_Altitude_Inner::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Message_Altitude_Inner::InternalSwap(Message_Altitude_Inner* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(ival_, other->ival_);
  swap(booly_, other->booly_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_Altitude_Inner::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Message_Altitude::InitAsDefaultInstance() {
}
class Message_Altitude::_Internal {
 public:
  using HasBits = decltype(std::declval<Message_Altitude>()._has_bits_);
};

Message_Altitude::Message_Altitude()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Message.Altitude)
}
Message_Altitude::Message_Altitude(const Message_Altitude& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Message.Altitude)
}

void Message_Altitude::SharedCtor() {
}

Message_Altitude::~Message_Altitude() {
  // @@protoc_insertion_point(destructor:Message.Altitude)
  SharedDtor();
}

void Message_Altitude::SharedDtor() {
}

void Message_Altitude::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message_Altitude& Message_Altitude::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Message_Altitude_proto_2eproto.base);
  return *internal_default_instance();
}


void Message_Altitude::Clear() {
// @@protoc_insertion_point(message_clear_start:Message.Altitude)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* Message_Altitude::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message_Altitude::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Message.Altitude)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Message.Altitude)
  return target;
}

size_t Message_Altitude::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Message.Altitude)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_Altitude::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Message.Altitude)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_Altitude* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message_Altitude>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Message.Altitude)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Message.Altitude)
    MergeFrom(*source);
  }
}

void Message_Altitude::MergeFrom(const Message_Altitude& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Message.Altitude)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Message_Altitude::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Message.Altitude)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_Altitude::CopyFrom(const Message_Altitude& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Message.Altitude)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_Altitude::IsInitialized() const {
  return true;
}

void Message_Altitude::InternalSwap(Message_Altitude* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_Altitude::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Message::InitAsDefaultInstance() {
}
class Message::_Internal {
 public:
  using HasBits = decltype(std::declval<Message>()._has_bits_);
};

Message::Message()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Message)
}
Message::Message(const Message& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Message)
}

void Message::SharedCtor() {
}

Message::~Message() {
  // @@protoc_insertion_point(destructor:Message)
  SharedDtor();
}

void Message::SharedDtor() {
}

void Message::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message& Message::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Message_proto_2eproto.base);
  return *internal_default_instance();
}


void Message::Clear() {
// @@protoc_insertion_point(message_clear_start:Message)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* Message::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Message)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Message)
  return target;
}

size_t Message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Message)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Message)
  GOOGLE_DCHECK_NE(&from, this);
  const Message* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Message)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Message)
    MergeFrom(*source);
  }
}

void Message::MergeFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Message)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Message::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message::CopyFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message::IsInitialized() const {
  return true;
}

void Message::InternalSwap(Message* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Message::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Message_Position_Cartesian* Arena::CreateMaybeMessage< ::Message_Position_Cartesian >(Arena* arena) {
  return Arena::CreateInternal< ::Message_Position_Cartesian >(arena);
}
template<> PROTOBUF_NOINLINE ::Message_Position* Arena::CreateMaybeMessage< ::Message_Position >(Arena* arena) {
  return Arena::CreateInternal< ::Message_Position >(arena);
}
template<> PROTOBUF_NOINLINE ::Message_Velocity_Inner* Arena::CreateMaybeMessage< ::Message_Velocity_Inner >(Arena* arena) {
  return Arena::CreateInternal< ::Message_Velocity_Inner >(arena);
}
template<> PROTOBUF_NOINLINE ::Message_Velocity* Arena::CreateMaybeMessage< ::Message_Velocity >(Arena* arena) {
  return Arena::CreateInternal< ::Message_Velocity >(arena);
}
template<> PROTOBUF_NOINLINE ::Message_Altitude_Inner* Arena::CreateMaybeMessage< ::Message_Altitude_Inner >(Arena* arena) {
  return Arena::CreateInternal< ::Message_Altitude_Inner >(arena);
}
template<> PROTOBUF_NOINLINE ::Message_Altitude* Arena::CreateMaybeMessage< ::Message_Altitude >(Arena* arena) {
  return Arena::CreateInternal< ::Message_Altitude >(arena);
}
template<> PROTOBUF_NOINLINE ::Message* Arena::CreateMaybeMessage< ::Message >(Arena* arena) {
  return Arena::CreateInternal< ::Message >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
